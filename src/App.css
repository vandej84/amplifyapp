body {
    background-color: #C0C0C0;
}

header{
  font-size: 11px; 
}

 .site-title {
    margin: 0;
    padding: 0;
    height: 61px;
 }
 
#banner h2, #navigation h1{
  clip: rect(0 0 0 0);
  position: absolute; 
}

#navigation {
  clear: both;
  margin: 0 auto 0px;
  min-height: 2.2em;
  padding: 0 20px;
  position: relative;
  z-index: 1; 
}

#navigation div.navigation-gradient {
  background: #CC0033;
  position: absolute;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
}

#navigation ul {
  list-style: none;
  margin: 0;
  padding: 0;
  z-index: 2; 
}

#navigation li, #navigation a {
  display: inline-block; 
}

#navigation li {
  position: relative;
  vertical-align: top;
  border-right: solid 1px #CCC; 
  border-left: solid 1px #CCC; 
}

#navigation a {
  /* --color: #49225F; --*/
  color: #FFFFFF;
  background: #CC0033;
  font-size: 1.1em;
  font-weight: bold;
  /*-- margin: 0: --*/
  margin: 0 0 0 -3px;
  padding: 11px 15px;
  text-decoration: none; 
  font-family: Arial;
}

#navigation li.hover a, #navigation a:hover {
  /* -- background: #8d8c8d; --*/
  background: #FFCC00;
  /*-- color: #FFF;--*/
  color: #000000;
  outline: 0; 
}
.content{
  font-size:18px;
  text-align:center;
}

.info{
  color:black;
}

.controls{
  color:black;
}

a.button{
	display:block;
	width:10vw;
	padding:20px;
	font-size:18px;
	font-weight:bold;
	text-align:center;
	color: white;
	background: #CC0033;
	text-decoration:none;
	border-radius:25px;
}
.row {
  padding:5px;
  margin-bottom:10px;
  display:flex;
}
.col {
  flex-basis:33.3%; /* this may be key to equalizing your columns - give the chidren a width, since the default is just to smash them all together. using a percentage makes it flexible/responsive to the screen size too */
  text-align:center;
  display:flex; /* gets a little messier, but an element can be both a flex child, and a flex parent */
  flex-direction:column;
  justify-content:center; /* this vertically centers the text */
  align-items:center;
}